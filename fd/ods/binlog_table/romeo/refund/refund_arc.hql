CREATE TABLE IF NOT EXISTS ods_fd_romeo.ods_fd_romeo_refund_arc (
    refund_id                   bigint,
    created_stamp               string,
    last_update_stamp           string,
    last_update_tx_stamp        string,
    created_tx_stamp            string,
    status                      string,
    current_status_sequence_no  bigint,
    note                        string,
    created_by_user_login       string,
    last_modified_by_user_login string comment '最后编辑操作人(注：只限于编辑页面的操作，不包括审核等其他页面的操作)',
    total_amount                decimal(15, 4),
    customer_user_id            bigint,
    order_id                    bigint,
    bank_name                   string,
    bank_account_no             string,
    account_user_login          string,
    bank_province               string,
    bank_city                   string,
    execute_date                string,
    execute_by_user_login       string,
    confirm_date                string,
    confirm_by_user_login       string,
    check_date_1                bigint,
    check_date_2                bigint,
    check_date_3                bigint,
    check_date_4                bigint,
    check_date_5                bigint,
    check_user_login_1          string,
    check_user_login_2          string,
    check_user_login_3          string,
    check_user_login_4          string,
    check_user_login_5          string,
    current_check_level         bigint,
    bank_transaction_no         bigint,
    check_note_1                string,
    check_note_2                string,
    check_note_3                string,
    check_note_4                string,
    check_note_5                string,
    refund_type_id              bigint,
    refund_payment_type_id      bigint,
    shipping_amount             decimal(15, 4),
    duty_fee                    decimal(15, 4),
    insure_fee                  decimal(15, 4) comment 'insure fee',
    alteration_fee              decimal(15, 4) comment '退款中alteration fee',
    rush_order_fee              decimal(15, 4) comment '退款中rush fee',
    pick_amount                 decimal(15, 4),
    pack_amount                 decimal(15, 4),
    cancel_date                 string,
    cancel_note                 string,
    customer_user_name          string,
    party_id                    bigint,
    currency                    string,
    return_apply_id             bigint,
    customer_service_type       string comment '退款原因明细,a表示售后，b表示售中，d表示投诉',
    coupon_fee                  decimal(15, 4) comment '退款中rush fee',
    deducted_by_points          decimal(15, 4) comment '',
    restocking_fee              decimal(15, 4) comment '退款中restocking fee(重新上架费用)',
    balance_amount              decimal(15, 4) comment '',
    item_deleted_fee            decimal(15, 4) comment '退款中rush fee',
    refund_domain               string comment '退款站点 1:非uk站 2:uk站 0：不需要标识站点信息',
    return_refund_type          string comment '退货退款类型',
    refund_to                   bigint comment '',
    is_first_free               bigint comment ''
) COMMENT '来自kafka erp currency_conversion数据'
PARTITIONED BY (dt STRING)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\001'
STORED AS PARQUETFILE;


set hive.exec.dynamic.partition.mode=nonstrict;
INSERT overwrite table ods_fd_romeo.ods_fd_romeo_refund_arc PARTITION (dt = '${hiveconf:dt}')
select 
     refund_id, created_stamp, last_update_stamp, last_update_tx_stamp, created_tx_stamp, status, current_status_sequence_no, note, created_by_user_login, last_modified_by_user_login, total_amount, customer_user_id, order_id, bank_name, bank_account_no, account_user_login, bank_province, bank_city, execute_date, execute_by_user_login, confirm_date, confirm_by_user_login, check_date_1, check_date_2, check_date_3, check_date_4, check_date_5, check_user_login_1, check_user_login_2, check_user_login_3, check_user_login_4, check_user_login_5, current_check_level, bank_transaction_no, check_note_1, check_note_2, check_note_3, check_note_4, check_note_5, refund_type_id, refund_payment_type_id, shipping_amount, duty_fee, insure_fee, alteration_fee, rush_order_fee, pick_amount, pack_amount, cancel_date, cancel_note, customer_user_name, party_id, currency, return_apply_id, customer_service_type, coupon_fee, deducted_by_points, restocking_fee, balance_amount, item_deleted_fee, refund_domain, return_refund_type, refund_to, is_first_free
from (

    select 
        dt,refund_id, created_stamp, last_update_stamp, last_update_tx_stamp, created_tx_stamp, status, current_status_sequence_no, note, created_by_user_login, last_modified_by_user_login, total_amount, customer_user_id, order_id, bank_name, bank_account_no, account_user_login, bank_province, bank_city, execute_date, execute_by_user_login, confirm_date, confirm_by_user_login, check_date_1, check_date_2, check_date_3, check_date_4, check_date_5, check_user_login_1, check_user_login_2, check_user_login_3, check_user_login_4, check_user_login_5, current_check_level, bank_transaction_no, check_note_1, check_note_2, check_note_3, check_note_4, check_note_5, refund_type_id, refund_payment_type_id, shipping_amount, duty_fee, insure_fee, alteration_fee, rush_order_fee, pick_amount, pack_amount, cancel_date, cancel_note, customer_user_name, party_id, currency, return_apply_id, customer_service_type, coupon_fee, deducted_by_points, restocking_fee, balance_amount, item_deleted_fee, refund_domain, return_refund_type, refund_to, is_first_free,
        row_number () OVER (PARTITION BY refund_id ORDER BY dt DESC) AS rank
    from (

        select  dt as dt
                refund_id,
                created_stamp,
                last_update_stamp,
                last_update_tx_stamp,
                created_tx_stamp,
                status,
                current_status_sequence_no,
                note,
                created_by_user_login,
                last_modified_by_user_login,
                total_amount,
                customer_user_id,
                order_id,
                bank_name,
                bank_account_no,
                account_user_login,
                bank_province,
                bank_city,
                execute_date,
                execute_by_user_login,
                confirm_date,
                confirm_by_user_login,
                if(`check_date_1` != "0000-00-00 00:00:00" or `check_date_1` is not null,
                    unix_timestamp(to_utc_timestamp(check_date_1, "Asia/Shanghai"), "yyyy-MM-dd HH:mm:ss"), 0) AS `check_date_1`,
                if(`check_date_2` != "0000-00-00 00:00:00" or `check_date_2` is not null,
                    unix_timestamp(to_utc_timestamp(check_date_2, "Asia/Shanghai"), "yyyy-MM-dd HH:mm:ss"), 0) AS `check_date_2`,
                if(`check_date_3` != "0000-00-00 00:00:00" or `check_date_3` is not null,
                    unix_timestamp(to_utc_timestamp(check_date_3, "Asia/Shanghai"), "yyyy-MM-dd HH:mm:ss"), 0) AS `check_date_3`,
                if(`check_date_4` != "0000-00-00 00:00:00" or `check_date_4` is not null,
                    unix_timestamp(to_utc_timestamp(check_date_4, "Asia/Shanghai"), "yyyy-MM-dd HH:mm:ss"), 0) AS `check_date_4`,
                if(`check_date_5` != "0000-00-00 00:00:00" or `check_date_5` is not null,
                    unix_timestamp(to_utc_timestamp(check_date_5, "Asia/Shanghai"), "yyyy-MM-dd HH:mm:ss"), 0) AS `check_date_5`,
                check_user_login_1,
                check_user_login_2,
                check_user_login_3,
                check_user_login_4,
                check_user_login_5,
                current_check_level,
                bank_transaction_no,
                check_note_1,
                check_note_2,
                check_note_3,
                check_note_4,
                check_note_5,
                refund_type_id,
                refund_payment_type_id,
                shipping_amount,
                duty_fee,
                insure_fee,
                alteration_fee,
                rush_order_fee,
                pick_amount,
                pack_amount,
                cancel_date,
                cancel_note,
                customer_user_name,
                party_id,
                currency,
                return_apply_id,
                customer_service_type,
                coupon_fee,
                deducted_by_points,
                restocking_fee,
                balance_amount,
                item_deleted_fee,
                refund_domain,
                return_refund_type,
                refund_to,
                is_first_free
        from ods_fd_romeo.ods_fd_romeo_refund_arc where dt = '${hiveconf:dt_last}'

        UNION

        select dt,refund_id, created_stamp, last_update_stamp, last_update_tx_stamp, created_tx_stamp, status, current_status_sequence_no, note, created_by_user_login, last_modified_by_user_login, total_amount, customer_user_id, order_id, bank_name, bank_account_no, account_user_login, bank_province, bank_city, execute_date, execute_by_user_login, confirm_date, confirm_by_user_login, check_date_1, check_date_2, check_date_3, check_date_4, check_date_5, check_user_login_1, check_user_login_2, check_user_login_3, check_user_login_4, check_user_login_5, current_check_level, bank_transaction_no, check_note_1, check_note_2, check_note_3, check_note_4, check_note_5, refund_type_id, refund_payment_type_id, shipping_amount, duty_fee, insure_fee, alteration_fee, rush_order_fee, pick_amount, pack_amount, cancel_date, cancel_note, customer_user_name, party_id, currency, return_apply_id, customer_service_type, coupon_fee, deducted_by_points, restocking_fee, balance_amount, item_deleted_fee, refund_domain, return_refund_type, refund_to, is_first_free
        from (

            select  dt
                    refund_id,
                    created_stamp,
                    last_update_stamp,
                    last_update_tx_stamp,
                    created_tx_stamp,
                    status,
                    current_status_sequence_no,
                    note,
                    created_by_user_login,
                    last_modified_by_user_login,
                    total_amount,
                    customer_user_id,
                    order_id,
                    bank_name,
                    bank_account_no,
                    account_user_login,
                    bank_province,
                    bank_city,
                    execute_date,
                    execute_by_user_login,
                    confirm_date,
                    confirm_by_user_login,
                    check_date_1,
                    check_date_2,
                    check_date_3,
                    check_date_4,
                    check_date_5,
                    check_user_login_1,
                    check_user_login_2,
                    check_user_login_3,
                    check_user_login_4,
                    check_user_login_5,
                    current_check_level,
                    bank_transaction_no,
                    check_note_1,
                    check_note_2,
                    check_note_3,
                    check_note_4,
                    check_note_5,
                    refund_type_id,
                    refund_payment_type_id,
                    shipping_amount,
                    duty_fee,
                    insure_fee,
                    alteration_fee,
                    rush_order_fee,
                    pick_amount,
                    pack_amount,
                    cancel_date,
                    cancel_note,
                    customer_user_name,
                    party_id,
                    currency,
                    return_apply_id,
                    customer_service_type,
                    coupon_fee,
                    deducted_by_points,
                    restocking_fee,
                    balance_amount,
                    item_deleted_fee,
                    refund_domain,
                    return_refund_type,
                    refund_to,
                    is_first_free,
                    row_number () OVER (PARTITION BY refund_id ORDER BY event_id DESC) AS rank
            from ods_fd_romeo.ods_fd_romeo_refund_inc where dt='${hiveconf:dt}'

        ) inc where inc.rank = 1
    ) arc 
) tab where tab.rank = 1;
